{"version":3,"file":"static/js/986.aff3e0d8.chunk.js","mappings":"kNACA,GAAgB,UAAY,6BAA6B,MAAQ,yBAAyB,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,0BAA0B,KAAO,wBAAwB,KAAO,yB,mBC+EhOA,EAAY,WAGvB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MACvB,UAD2C,EAAbC,KACpBJ,EAASG,GAASL,EAAYK,EAClD,EAmBD,OACE,kBAAME,UAAS,UAAKC,EAAAA,KAAL,YAAiBA,EAAAA,MAAYC,SAlBzB,SAACC,GACpBA,EAAEC,iBAGFC,QAAQC,IAAI,mBAAoB,CAACd,SAAAA,EAAUE,MAAAA,IAS3CC,EAAS,IACTF,EAAY,GACb,EAGqEc,aAAa,MAAjF,WACE,iBAAKP,UAAWC,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAlB,SAA6B,WAG7B,kBACEO,KAAK,QACLT,KAAK,QACLC,UAAWC,EAAAA,MACXH,MAAOJ,EACPe,GAAG,aACHC,SAAUd,QAMd,iBAAKI,UAAWC,EAAAA,UAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAlB,SAA6B,cAG7B,kBACEO,KAAK,WACLT,KAAK,WACLC,UAAWC,EAAAA,MACXH,MAAON,EACPiB,GAAG,gBACHC,SAAUd,QAId,mBAAQY,KAAK,SAASR,UAAWC,EAAAA,OAAYU,UAAWjB,IAAUF,EAAlE,SAA4E,YAC5E,SAAC,KAAD,CAAMoB,GAAG,YAAYZ,UAAWC,EAAAA,KAAhC,SAA0C,eAG/C,ECnID,MATA,WACE,OACE,4BACG,2BAAO,WACP,SAACX,EAAD,MAGN,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"LoginForm_formGroup__h4mWf\",\"label\":\"LoginForm_label__F7sLE\",\"smallText\":\"LoginForm_smallText__t5hJ4\",\"input\":\"LoginForm_input__aQRtt\",\"button\":\"LoginForm_button__LodJg\",\"blue\":\"LoginForm_blue__BrVOA\",\"link\":\"LoginForm_link__IJw1a\"};","// import React, { useState } from 'react';\n// // import { useDispatch } from 'react-redux';\n// // import { register } from 'redux/auth/operations';\n// import css from './LoginForm.module.css';\n// import { Link } from 'react-router-dom';\n\n// export const LoginForm = () => {\n//   // const dispatch = useDispatch();\n\n//   const [password, setPassword] = useState('');\n//   const [email, setEmail] = useState('');\n\n//   const handleChange = ({ target: { value, name } }) => {\n//     name === 'email' ? setEmail(value) : setPassword(value);\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     // console.log('email, password', { email, password });\n//     console.log('Email:', email);\n//     console.log('Password:', password);\n\n//     // dispatch(\n//     //   register({\n//     //     name,\n//     //     email,\n//     //     password,\n//     //   })\n//     // );\n\n   \n//     setEmail('');\n//     setPassword('');\n//   };\n\n//   return (\n//     <form className={`${css.form} ${css.blue}`} onSubmit={handleSubmit} autoComplete=\"off\">\n     \n//       <div className={css.formGroup}>\n//         <label className={css.label}>\n//           Email\n//         </label>\n//         <input\n//           type=\"email\"\n//           name=\"email\"\n//           className={css.input}\n//           value={email}\n//           id=\"emailInput\"\n//           onChange={handleChange}\n//         />\n//         {/* <div className={css.smallText}>\n//           We'll never share your email with anyone else.\n//         </div> */}\n//       </div>\n//       <div className={css.formGroup}>\n//         <label className={css.label}>\n//           Password\n//         </label>\n//         <input\n//           type=\"password\"\n//           name=\"password\"\n//           className={css.input}\n//           value={password}\n//           id=\"passwordInput\"\n//           onChange={handleChange}\n//         />\n//       </div>\n      \n//       <button type=\"submit\" className={css.button} disabled={!email || !password}>Log In</button>\n//       <Link to='/register' className={css.link}>Register</Link>\n//     </form>\n//   );\n// };\n\nimport React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { register } from 'redux/auth/operations';\nimport css from './LoginForm.module.css';\nimport { Link } from 'react-router-dom';\n\nexport const LoginForm = () => {\n  // const dispatch = useDispatch();\n\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleChange = ({ target: { value, name } }) => {\n    name === 'email' ? setEmail(value) : setPassword(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log('Email:', email);\n    // console.log('Password:', password);\n    console.log('Password, Email:', {password, email});\n    // dispatch(\n    //   register({\n    //     name,\n    //     email,\n    //     password,\n    //   })\n    // );\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form className={`${css.form} ${css.blue}`} onSubmit={handleSubmit} autoComplete=\"off\">\n      <div className={css.formGroup}>\n        <label className={css.label}>\n          Email\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          className={css.input}\n          value={email}\n          id=\"emailInput\"\n          onChange={handleChange}\n        />\n        {/* <div className={css.smallText}>\n          We'll never share your email with anyone else.\n        </div> */}\n      </div>\n      <div className={css.formGroup}>\n        <label className={css.label}>\n          Password\n        </label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          className={css.input}\n          value={password}\n          id=\"passwordInput\"\n          onChange={handleChange}\n        />\n      </div>\n      \n      <button type=\"submit\" className={css.button} disabled={!email || !password}>Log In</button>\n      <Link to='/register' className={css.link}>Register</Link>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm'\nimport React from 'react'\n\nfunction LoginPage() {\n  return (\n    <div>\n       <title>Login</title>\n       <LoginForm/>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"names":["LoginForm","useState","password","setPassword","email","setEmail","handleChange","target","value","name","className","css","onSubmit","e","preventDefault","console","log","autoComplete","type","id","onChange","disabled","to"],"sourceRoot":""}